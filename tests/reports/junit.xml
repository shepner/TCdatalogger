<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="9" failures="1" skipped="0" tests="10" time="1.215" timestamp="2025-03-21T21:49:15.630191" hostname="WS01.local"><testcase classname="unit.services.torncity.test_members_pull.TestMembersPull" name="test_members_data_pull" time="0.004"><error message="failed on setup with &quot;ValueError: Either 'api_key' or 'tc_api_key_file' must be provided&quot;">tests/unit/services/torncity/test_members_pull.py:278: in members_processor
    return MembersEndpointProcessor(config=config)
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp28rplwz_/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        test_config_dir = PosixPath('/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp28rplwz_')
app/services/torncity/endpoints/members.py:28: in __init__
    super().__init__(config)
        __class__  = &lt;class 'app.services.torncity.endpoints.members.MembersEndpointProcessor'&gt;
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp28rplwz_/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        endpoint_config = None
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x132025e80&gt;
app/services/torncity/base.py:53: in __init__
    self.validate_config(config)
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp28rplwz_/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x132025e80&gt;
app/services/torncity/base.py:129: in validate_config
    raise ValueError("Either 'api_key' or 'tc_api_key_file' must be provided")
E   ValueError: Either 'api_key' or 'tc_api_key_file' must be provided
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp28rplwz_/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        missing_fields = []
        required_fields = ['gcp_credentials_file', 'endpoint']</error></testcase><testcase classname="unit.services.torncity.test_members_pull.TestMembersPull" name="test_empty_members_response" time="0.006"><error message="failed on setup with &quot;ValueError: Either 'api_key' or 'tc_api_key_file' must be provided&quot;">tests/unit/services/torncity/test_members_pull.py:278: in members_processor
    return MembersEndpointProcessor(config=config)
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpw7bt847h/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        test_config_dir = PosixPath('/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpw7bt847h')
app/services/torncity/endpoints/members.py:28: in __init__
    super().__init__(config)
        __class__  = &lt;class 'app.services.torncity.endpoints.members.MembersEndpointProcessor'&gt;
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpw7bt847h/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        endpoint_config = None
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x1320b9810&gt;
app/services/torncity/base.py:53: in __init__
    self.validate_config(config)
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpw7bt847h/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x1320b9810&gt;
app/services/torncity/base.py:129: in validate_config
    raise ValueError("Either 'api_key' or 'tc_api_key_file' must be provided")
E   ValueError: Either 'api_key' or 'tc_api_key_file' must be provided
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpw7bt847h/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        missing_fields = []
        required_fields = ['gcp_credentials_file', 'endpoint']</error></testcase><testcase classname="unit.services.torncity.test_members_pull.TestMembersPull" name="test_empty_records_list" time="0.004"><error message="failed on setup with &quot;ValueError: Either 'api_key' or 'tc_api_key_file' must be provided&quot;">tests/unit/services/torncity/test_members_pull.py:278: in members_processor
    return MembersEndpointProcessor(config=config)
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmplkb90qc5/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        test_config_dir = PosixPath('/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmplkb90qc5')
app/services/torncity/endpoints/members.py:28: in __init__
    super().__init__(config)
        __class__  = &lt;class 'app.services.torncity.endpoints.members.MembersEndpointProcessor'&gt;
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmplkb90qc5/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        endpoint_config = None
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x1320ba350&gt;
app/services/torncity/base.py:53: in __init__
    self.validate_config(config)
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmplkb90qc5/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x1320ba350&gt;
app/services/torncity/base.py:129: in validate_config
    raise ValueError("Either 'api_key' or 'tc_api_key_file' must be provided")
E   ValueError: Either 'api_key' or 'tc_api_key_file' must be provided
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmplkb90qc5/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        missing_fields = []
        required_fields = ['gcp_credentials_file', 'endpoint']</error></testcase><testcase classname="unit.services.torncity.test_members_pull.TestMembersPull" name="test_members_bigquery_integration" time="0.003"><error message="failed on setup with &quot;ValueError: Either 'api_key' or 'tc_api_key_file' must be provided&quot;">tests/unit/services/torncity/test_members_pull.py:278: in members_processor
    return MembersEndpointProcessor(config=config)
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpm32k7grv/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        test_config_dir = PosixPath('/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpm32k7grv')
app/services/torncity/endpoints/members.py:28: in __init__
    super().__init__(config)
        __class__  = &lt;class 'app.services.torncity.endpoints.members.MembersEndpointProcessor'&gt;
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpm32k7grv/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        endpoint_config = None
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x1325d8b00&gt;
app/services/torncity/base.py:53: in __init__
    self.validate_config(config)
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpm32k7grv/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x1325d8b00&gt;
app/services/torncity/base.py:129: in validate_config
    raise ValueError("Either 'api_key' or 'tc_api_key_file' must be provided")
E   ValueError: Either 'api_key' or 'tc_api_key_file' must be provided
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpm32k7grv/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        missing_fields = []
        required_fields = ['gcp_credentials_file', 'endpoint']</error></testcase><testcase classname="unit.services.torncity.test_members_pull.TestMembersPull" name="test_empty_dataframe_after_processing" time="0.003"><error message="failed on setup with &quot;ValueError: Either 'api_key' or 'tc_api_key_file' must be provided&quot;">tests/unit/services/torncity/test_members_pull.py:278: in members_processor
    return MembersEndpointProcessor(config=config)
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp4qvorane/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        test_config_dir = PosixPath('/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp4qvorane')
app/services/torncity/endpoints/members.py:28: in __init__
    super().__init__(config)
        __class__  = &lt;class 'app.services.torncity.endpoints.members.MembersEndpointProcessor'&gt;
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp4qvorane/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        endpoint_config = None
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x1325da520&gt;
app/services/torncity/base.py:53: in __init__
    self.validate_config(config)
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp4qvorane/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x1325da520&gt;
app/services/torncity/base.py:129: in validate_config
    raise ValueError("Either 'api_key' or 'tc_api_key_file' must be provided")
E   ValueError: Either 'api_key' or 'tc_api_key_file' must be provided
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp4qvorane/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        missing_fields = []
        required_fields = ['gcp_credentials_file', 'endpoint']</error></testcase><testcase classname="unit.services.torncity.test_members_pull.TestMembersPull" name="test_transform_data_exception" time="0.003"><error message="failed on setup with &quot;ValueError: Either 'api_key' or 'tc_api_key_file' must be provided&quot;">tests/unit/services/torncity/test_members_pull.py:278: in members_processor
    return MembersEndpointProcessor(config=config)
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpzawj87ia/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        test_config_dir = PosixPath('/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpzawj87ia')
app/services/torncity/endpoints/members.py:28: in __init__
    super().__init__(config)
        __class__  = &lt;class 'app.services.torncity.endpoints.members.MembersEndpointProcessor'&gt;
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpzawj87ia/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        endpoint_config = None
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x1320a20f0&gt;
app/services/torncity/base.py:53: in __init__
    self.validate_config(config)
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpzawj87ia/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x1320a20f0&gt;
app/services/torncity/base.py:129: in validate_config
    raise ValueError("Either 'api_key' or 'tc_api_key_file' must be provided")
E   ValueError: Either 'api_key' or 'tc_api_key_file' must be provided
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpzawj87ia/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        missing_fields = []
        required_fields = ['gcp_credentials_file', 'endpoint']</error></testcase><testcase classname="unit.services.torncity.test_members_pull.TestMembersPull" name="test_timestamp_conversion_error" time="0.003"><error message="failed on setup with &quot;ValueError: Either 'api_key' or 'tc_api_key_file' must be provided&quot;">tests/unit/services/torncity/test_members_pull.py:278: in members_processor
    return MembersEndpointProcessor(config=config)
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp20flf6j6/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        test_config_dir = PosixPath('/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp20flf6j6')
app/services/torncity/endpoints/members.py:28: in __init__
    super().__init__(config)
        __class__  = &lt;class 'app.services.torncity.endpoints.members.MembersEndpointProcessor'&gt;
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp20flf6j6/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        endpoint_config = None
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x13241f460&gt;
app/services/torncity/base.py:53: in __init__
    self.validate_config(config)
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp20flf6j6/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x13241f460&gt;
app/services/torncity/base.py:129: in validate_config
    raise ValueError("Either 'api_key' or 'tc_api_key_file' must be provided")
E   ValueError: Either 'api_key' or 'tc_api_key_file' must be provided
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp20flf6j6/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        missing_fields = []
        required_fields = ['gcp_credentials_file', 'endpoint']</error></testcase><testcase classname="unit.services.torncity.test_members_pull.TestMembersPull" name="test_invalid_members_data" time="0.003"><error message="failed on setup with &quot;ValueError: Either 'api_key' or 'tc_api_key_file' must be provided&quot;">tests/unit/services/torncity/test_members_pull.py:278: in members_processor
    return MembersEndpointProcessor(config=config)
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpdaapzpr2/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        test_config_dir = PosixPath('/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpdaapzpr2')
app/services/torncity/endpoints/members.py:28: in __init__
    super().__init__(config)
        __class__  = &lt;class 'app.services.torncity.endpoints.members.MembersEndpointProcessor'&gt;
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpdaapzpr2/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        endpoint_config = None
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x13241df20&gt;
app/services/torncity/base.py:53: in __init__
    self.validate_config(config)
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpdaapzpr2/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x13241df20&gt;
app/services/torncity/base.py:129: in validate_config
    raise ValueError("Either 'api_key' or 'tc_api_key_file' must be provided")
E   ValueError: Either 'api_key' or 'tc_api_key_file' must be provided
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmpdaapzpr2/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        missing_fields = []
        required_fields = ['gcp_credentials_file', 'endpoint']</error></testcase><testcase classname="unit.services.torncity.test_members_pull.TestMembersPull" name="test_members_data_validation" time="0.003"><error message="failed on setup with &quot;ValueError: Either 'api_key' or 'tc_api_key_file' must be provided&quot;">tests/unit/services/torncity/test_members_pull.py:278: in members_processor
    return MembersEndpointProcessor(config=config)
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp2yf4ojm6/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        test_config_dir = PosixPath('/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp2yf4ojm6')
app/services/torncity/endpoints/members.py:28: in __init__
    super().__init__(config)
        __class__  = &lt;class 'app.services.torncity.endpoints.members.MembersEndpointProcessor'&gt;
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp2yf4ojm6/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        endpoint_config = None
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x1320b7950&gt;
app/services/torncity/base.py:53: in __init__
    self.validate_config(config)
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp2yf4ojm6/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x1320b7950&gt;
app/services/torncity/base.py:129: in validate_config
    raise ValueError("Either 'api_key' or 'tc_api_key_file' must be provided")
E   ValueError: Either 'api_key' or 'tc_api_key_file' must be provided
        config     = {'dataset': 'test_dataset',
 'endpoint': 'members',
 'gcp_credentials_file': '/var/folders/d2/r_89717x5m7dh95_nkl2vlhh0000gp/T/tmp2yf4ojm6/credentials.json',
 'gcp_project_id': 'test-project',
 'selection': 'default',
 'storage_mode': 'append'}
        missing_fields = []
        required_fields = ['gcp_credentials_file', 'endpoint']</error></testcase><testcase classname="unit.services.torncity.test_members_pull.TestMembersPull" name="test_transform_data" time="0.002"><failure message="ValueError: Missing required configuration fields: gcp_credentials_file, endpoint">tests/unit/services/torncity/test_members_pull.py:754: in test_transform_data
    processor = MembersEndpointProcessor({})
        mock_members_response = {'data': {'members': {'1': {'faction': {'days_in_faction': 100,
                                        'position': 'Member'},
                            'has_early_discharge': False,
                            'is_in_oc': True,
                            'is_on_wall': False,
                            'is_revivable': True,
                            'last_action': {'relative': '1 hour ago',
                                            'status': 'Online',
                                            'timestamp': 1646960400},
                            'level': 50,
                            'life': {'current': 100, 'maximum': 100},
                            'name': 'Test Member',
                            'revive_setting': 'friends',
                            'status': {'description': 'Online',
                                       'details': 'Active',
                                       'state': 'Okay',
                                       'until': ''}}}}}
        self       = &lt;test_members_pull.TestMembersPull object at 0x132085cc0&gt;
app/services/torncity/endpoints/members.py:28: in __init__
    super().__init__(config)
        __class__  = &lt;class 'app.services.torncity.endpoints.members.MembersEndpointProcessor'&gt;
        config     = {}
        endpoint_config = None
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x1320b7e50&gt;
app/services/torncity/base.py:53: in __init__
    self.validate_config(config)
        config     = {}
        self       = &lt;app.services.torncity.endpoints.members.MembersEndpointProcessor object at 0x1320b7e50&gt;
app/services/torncity/base.py:120: in validate_config
    raise ValueError(f"Missing required configuration fields: {', '.join(missing_fields)}")
E   ValueError: Missing required configuration fields: gcp_credentials_file, endpoint
        config     = {}
        missing_fields = ['gcp_credentials_file', 'endpoint']
        required_fields = ['gcp_credentials_file', 'endpoint']</failure></testcase></testsuite></testsuites>